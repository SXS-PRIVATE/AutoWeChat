<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.shu.wechat.mapper.MessageMapper">
  <resultMap id="BaseResultMap" type="cn.shu.wechat.beans.pojo.Message">
    <!--@mbg.generated-->
    <!--@Table message-->
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="msg_id" jdbcType="VARCHAR" property="msgId" />
    <result column="msg_type" jdbcType="INTEGER" property="msgType" />
    <result column="app_msg_type" jdbcType="INTEGER" property="appMsgType" />
    <result column="msg_desc" jdbcType="VARCHAR" property="msgDesc" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="msg_json" jdbcType="LONGVARCHAR" property="msgJson" />
    <result column="from_username" jdbcType="VARCHAR" property="fromUsername" />
    <result column="to_username" jdbcType="VARCHAR" property="toUsername" />
    <result column="from_remarkname" jdbcType="VARCHAR" property="fromRemarkname" />
    <result column="to_remarkname" jdbcType="VARCHAR" property="toRemarkname" />
    <result column="from_nickname" jdbcType="VARCHAR" property="fromNickname" />
    <result column="to_nickname" jdbcType="VARCHAR" property="toNickname" />
    <result column="from_member_of_group_nickname" jdbcType="VARCHAR" property="fromMemberOfGroupNickname" />
    <result column="from_member_of_group_displayname" jdbcType="VARCHAR" property="fromMemberOfGroupDisplayname" />
    <result column="from_member_of_group_username" jdbcType="VARCHAR" property="fromMemberOfGroupUsername" />
    <result column="is_send" jdbcType="BOOLEAN" property="isSend" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, msg_id, msg_type, app_msg_type, msg_desc, create_time, content, msg_json, from_username, 
    to_username, from_remarkname, to_remarkname, from_nickname, to_nickname, from_member_of_group_nickname, 
    from_member_of_group_displayname, from_member_of_group_username, is_send
  </sql>
  <select id="selectByExample" parameterType="cn.shu.wechat.beans.pojo.MessageExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from message
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from message
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.shu.wechat.beans.pojo.MessageExample">
    <!--@mbg.generated-->
    delete from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.shu.wechat.beans.pojo.Message">
    <!--@mbg.generated-->
    insert into message (id, msg_id, msg_type, 
      app_msg_type, msg_desc, create_time, 
      content, msg_json, from_username, 
      to_username, from_remarkname, to_remarkname, 
      from_nickname, to_nickname, from_member_of_group_nickname, 
      from_member_of_group_displayname, from_member_of_group_username, 
      is_send)
    values (#{id,jdbcType=CHAR}, #{msgId,jdbcType=VARCHAR}, #{msgType,jdbcType=INTEGER}, 
      #{appMsgType,jdbcType=INTEGER}, #{msgDesc,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR}, #{msgJson,jdbcType=LONGVARCHAR}, #{fromUsername,jdbcType=VARCHAR}, 
      #{toUsername,jdbcType=VARCHAR}, #{fromRemarkname,jdbcType=VARCHAR}, #{toRemarkname,jdbcType=VARCHAR}, 
      #{fromNickname,jdbcType=VARCHAR}, #{toNickname,jdbcType=VARCHAR}, #{fromMemberOfGroupNickname,jdbcType=VARCHAR}, 
      #{fromMemberOfGroupDisplayname,jdbcType=VARCHAR}, #{fromMemberOfGroupUsername,jdbcType=VARCHAR}, 
      #{isSend,jdbcType=BOOLEAN})
  </insert>
  <insert id="insertSelective" parameterType="cn.shu.wechat.beans.pojo.Message">
    <!--@mbg.generated-->
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="msgId != null">
        msg_id,
      </if>
      <if test="msgType != null">
        msg_type,
      </if>
      <if test="appMsgType != null">
        app_msg_type,
      </if>
      <if test="msgDesc != null">
        msg_desc,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="msgJson != null">
        msg_json,
      </if>
      <if test="fromUsername != null">
        from_username,
      </if>
      <if test="toUsername != null">
        to_username,
      </if>
      <if test="fromRemarkname != null">
        from_remarkname,
      </if>
      <if test="toRemarkname != null">
        to_remarkname,
      </if>
      <if test="fromNickname != null">
        from_nickname,
      </if>
      <if test="toNickname != null">
        to_nickname,
      </if>
      <if test="fromMemberOfGroupNickname != null">
        from_member_of_group_nickname,
      </if>
      <if test="fromMemberOfGroupDisplayname != null">
        from_member_of_group_displayname,
      </if>
      <if test="fromMemberOfGroupUsername != null">
        from_member_of_group_username,
      </if>
      <if test="isSend != null">
        is_send,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="msgId != null">
        #{msgId,jdbcType=VARCHAR},
      </if>
      <if test="msgType != null">
        #{msgType,jdbcType=INTEGER},
      </if>
      <if test="appMsgType != null">
        #{appMsgType,jdbcType=INTEGER},
      </if>
      <if test="msgDesc != null">
        #{msgDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="msgJson != null">
        #{msgJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="fromUsername != null">
        #{fromUsername,jdbcType=VARCHAR},
      </if>
      <if test="toUsername != null">
        #{toUsername,jdbcType=VARCHAR},
      </if>
      <if test="fromRemarkname != null">
        #{fromRemarkname,jdbcType=VARCHAR},
      </if>
      <if test="toRemarkname != null">
        #{toRemarkname,jdbcType=VARCHAR},
      </if>
      <if test="fromNickname != null">
        #{fromNickname,jdbcType=VARCHAR},
      </if>
      <if test="toNickname != null">
        #{toNickname,jdbcType=VARCHAR},
      </if>
      <if test="fromMemberOfGroupNickname != null">
        #{fromMemberOfGroupNickname,jdbcType=VARCHAR},
      </if>
      <if test="fromMemberOfGroupDisplayname != null">
        #{fromMemberOfGroupDisplayname,jdbcType=VARCHAR},
      </if>
      <if test="fromMemberOfGroupUsername != null">
        #{fromMemberOfGroupUsername,jdbcType=VARCHAR},
      </if>
      <if test="isSend != null">
        #{isSend,jdbcType=BOOLEAN},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.shu.wechat.beans.pojo.MessageExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update message
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.msgId != null">
        msg_id = #{record.msgId,jdbcType=VARCHAR},
      </if>
      <if test="record.msgType != null">
        msg_type = #{record.msgType,jdbcType=INTEGER},
      </if>
      <if test="record.appMsgType != null">
        app_msg_type = #{record.appMsgType,jdbcType=INTEGER},
      </if>
      <if test="record.msgDesc != null">
        msg_desc = #{record.msgDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.msgJson != null">
        msg_json = #{record.msgJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.fromUsername != null">
        from_username = #{record.fromUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.toUsername != null">
        to_username = #{record.toUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.fromRemarkname != null">
        from_remarkname = #{record.fromRemarkname,jdbcType=VARCHAR},
      </if>
      <if test="record.toRemarkname != null">
        to_remarkname = #{record.toRemarkname,jdbcType=VARCHAR},
      </if>
      <if test="record.fromNickname != null">
        from_nickname = #{record.fromNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.toNickname != null">
        to_nickname = #{record.toNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.fromMemberOfGroupNickname != null">
        from_member_of_group_nickname = #{record.fromMemberOfGroupNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.fromMemberOfGroupDisplayname != null">
        from_member_of_group_displayname = #{record.fromMemberOfGroupDisplayname,jdbcType=VARCHAR},
      </if>
      <if test="record.fromMemberOfGroupUsername != null">
        from_member_of_group_username = #{record.fromMemberOfGroupUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.isSend != null">
        is_send = #{record.isSend,jdbcType=BOOLEAN},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update message
    set id = #{record.id,jdbcType=CHAR},
      msg_id = #{record.msgId,jdbcType=VARCHAR},
      msg_type = #{record.msgType,jdbcType=INTEGER},
      app_msg_type = #{record.appMsgType,jdbcType=INTEGER},
      msg_desc = #{record.msgDesc,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR},
      msg_json = #{record.msgJson,jdbcType=LONGVARCHAR},
      from_username = #{record.fromUsername,jdbcType=VARCHAR},
      to_username = #{record.toUsername,jdbcType=VARCHAR},
      from_remarkname = #{record.fromRemarkname,jdbcType=VARCHAR},
      to_remarkname = #{record.toRemarkname,jdbcType=VARCHAR},
      from_nickname = #{record.fromNickname,jdbcType=VARCHAR},
      to_nickname = #{record.toNickname,jdbcType=VARCHAR},
      from_member_of_group_nickname = #{record.fromMemberOfGroupNickname,jdbcType=VARCHAR},
      from_member_of_group_displayname = #{record.fromMemberOfGroupDisplayname,jdbcType=VARCHAR},
      from_member_of_group_username = #{record.fromMemberOfGroupUsername,jdbcType=VARCHAR},
      is_send = #{record.isSend,jdbcType=BOOLEAN}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.shu.wechat.beans.pojo.Message">
    <!--@mbg.generated-->
    update message
    <set>
      <if test="msgId != null">
        msg_id = #{msgId,jdbcType=VARCHAR},
      </if>
      <if test="msgType != null">
        msg_type = #{msgType,jdbcType=INTEGER},
      </if>
      <if test="appMsgType != null">
        app_msg_type = #{appMsgType,jdbcType=INTEGER},
      </if>
      <if test="msgDesc != null">
        msg_desc = #{msgDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="msgJson != null">
        msg_json = #{msgJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="fromUsername != null">
        from_username = #{fromUsername,jdbcType=VARCHAR},
      </if>
      <if test="toUsername != null">
        to_username = #{toUsername,jdbcType=VARCHAR},
      </if>
      <if test="fromRemarkname != null">
        from_remarkname = #{fromRemarkname,jdbcType=VARCHAR},
      </if>
      <if test="toRemarkname != null">
        to_remarkname = #{toRemarkname,jdbcType=VARCHAR},
      </if>
      <if test="fromNickname != null">
        from_nickname = #{fromNickname,jdbcType=VARCHAR},
      </if>
      <if test="toNickname != null">
        to_nickname = #{toNickname,jdbcType=VARCHAR},
      </if>
      <if test="fromMemberOfGroupNickname != null">
        from_member_of_group_nickname = #{fromMemberOfGroupNickname,jdbcType=VARCHAR},
      </if>
      <if test="fromMemberOfGroupDisplayname != null">
        from_member_of_group_displayname = #{fromMemberOfGroupDisplayname,jdbcType=VARCHAR},
      </if>
      <if test="fromMemberOfGroupUsername != null">
        from_member_of_group_username = #{fromMemberOfGroupUsername,jdbcType=VARCHAR},
      </if>
      <if test="isSend != null">
        is_send = #{isSend,jdbcType=BOOLEAN},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.shu.wechat.beans.pojo.Message">
    <!--@mbg.generated-->
    update message
    set msg_id = #{msgId,jdbcType=VARCHAR},
      msg_type = #{msgType,jdbcType=INTEGER},
      app_msg_type = #{appMsgType,jdbcType=INTEGER},
      msg_desc = #{msgDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR},
      msg_json = #{msgJson,jdbcType=LONGVARCHAR},
      from_username = #{fromUsername,jdbcType=VARCHAR},
      to_username = #{toUsername,jdbcType=VARCHAR},
      from_remarkname = #{fromRemarkname,jdbcType=VARCHAR},
      to_remarkname = #{toRemarkname,jdbcType=VARCHAR},
      from_nickname = #{fromNickname,jdbcType=VARCHAR},
      to_nickname = #{toNickname,jdbcType=VARCHAR},
      from_member_of_group_nickname = #{fromMemberOfGroupNickname,jdbcType=VARCHAR},
      from_member_of_group_displayname = #{fromMemberOfGroupDisplayname,jdbcType=VARCHAR},
      from_member_of_group_username = #{fromMemberOfGroupUsername,jdbcType=VARCHAR},
      is_send = #{isSend,jdbcType=BOOLEAN}
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update message
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="msg_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.msgId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="msg_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.msgType,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="app_msg_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.appMsgType,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="msg_desc = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.msgDesc,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="content = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.content,jdbcType=LONGVARCHAR}
        </foreach>
      </trim>
      <trim prefix="msg_json = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.msgJson,jdbcType=LONGVARCHAR}
        </foreach>
      </trim>
      <trim prefix="from_username = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.fromUsername,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="to_username = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.toUsername,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="from_remarkname = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.fromRemarkname,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="to_remarkname = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.toRemarkname,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="from_nickname = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.fromNickname,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="to_nickname = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.toNickname,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="from_member_of_group_nickname = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.fromMemberOfGroupNickname,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="from_member_of_group_displayname = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.fromMemberOfGroupDisplayname,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="from_member_of_group_username = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.fromMemberOfGroupUsername,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="is_send = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=CHAR} then #{item.isSend,jdbcType=BOOLEAN}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=CHAR}
    </foreach>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into message
    (id, msg_id, msg_type, app_msg_type, msg_desc, create_time, content, msg_json, from_username, 
      to_username, from_remarkname, to_remarkname, from_nickname, to_nickname, from_member_of_group_nickname, 
      from_member_of_group_displayname, from_member_of_group_username, is_send)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=CHAR}, #{item.msgId,jdbcType=VARCHAR}, #{item.msgType,jdbcType=INTEGER}, 
        #{item.appMsgType,jdbcType=INTEGER}, #{item.msgDesc,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.content,jdbcType=LONGVARCHAR}, #{item.msgJson,jdbcType=LONGVARCHAR}, #{item.fromUsername,jdbcType=VARCHAR}, 
        #{item.toUsername,jdbcType=VARCHAR}, #{item.fromRemarkname,jdbcType=VARCHAR}, #{item.toRemarkname,jdbcType=VARCHAR}, 
        #{item.fromNickname,jdbcType=VARCHAR}, #{item.toNickname,jdbcType=VARCHAR}, #{item.fromMemberOfGroupNickname,jdbcType=VARCHAR}, 
        #{item.fromMemberOfGroupDisplayname,jdbcType=VARCHAR}, #{item.fromMemberOfGroupUsername,jdbcType=VARCHAR}, 
        #{item.isSend,jdbcType=BOOLEAN})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="cn.shu.wechat.beans.pojo.Message">
    <!--@mbg.generated-->
    insert into message
    (id, msg_id, msg_type, app_msg_type, msg_desc, create_time, content, msg_json, from_username, 
      to_username, from_remarkname, to_remarkname, from_nickname, to_nickname, from_member_of_group_nickname, 
      from_member_of_group_displayname, from_member_of_group_username, is_send)
    values
    (#{id,jdbcType=CHAR}, #{msgId,jdbcType=VARCHAR}, #{msgType,jdbcType=INTEGER}, #{appMsgType,jdbcType=INTEGER}, 
      #{msgDesc,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}, 
      #{msgJson,jdbcType=LONGVARCHAR}, #{fromUsername,jdbcType=VARCHAR}, #{toUsername,jdbcType=VARCHAR}, 
      #{fromRemarkname,jdbcType=VARCHAR}, #{toRemarkname,jdbcType=VARCHAR}, #{fromNickname,jdbcType=VARCHAR}, 
      #{toNickname,jdbcType=VARCHAR}, #{fromMemberOfGroupNickname,jdbcType=VARCHAR}, 
      #{fromMemberOfGroupDisplayname,jdbcType=VARCHAR}, #{fromMemberOfGroupUsername,jdbcType=VARCHAR}, 
      #{isSend,jdbcType=BOOLEAN})
    on duplicate key update 
    id = #{id,jdbcType=CHAR}, 
    msg_id = #{msgId,jdbcType=VARCHAR}, 
    msg_type = #{msgType,jdbcType=INTEGER}, 
    app_msg_type = #{appMsgType,jdbcType=INTEGER}, 
    msg_desc = #{msgDesc,jdbcType=VARCHAR}, 
    create_time = #{createTime,jdbcType=TIMESTAMP}, 
    content = #{content,jdbcType=LONGVARCHAR}, 
    msg_json = #{msgJson,jdbcType=LONGVARCHAR}, 
    from_username = #{fromUsername,jdbcType=VARCHAR}, 
    to_username = #{toUsername,jdbcType=VARCHAR}, 
    from_remarkname = #{fromRemarkname,jdbcType=VARCHAR}, 
    to_remarkname = #{toRemarkname,jdbcType=VARCHAR}, 
    from_nickname = #{fromNickname,jdbcType=VARCHAR}, 
    to_nickname = #{toNickname,jdbcType=VARCHAR}, 
    from_member_of_group_nickname = #{fromMemberOfGroupNickname,jdbcType=VARCHAR}, 
    from_member_of_group_displayname = #{fromMemberOfGroupDisplayname,jdbcType=VARCHAR}, 
    from_member_of_group_username = #{fromMemberOfGroupUsername,jdbcType=VARCHAR}, 
    is_send = #{isSend,jdbcType=BOOLEAN}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="cn.shu.wechat.beans.pojo.Message">
    <!--@mbg.generated-->
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="msgId != null">
        msg_id,
      </if>
      <if test="msgType != null">
        msg_type,
      </if>
      <if test="appMsgType != null">
        app_msg_type,
      </if>
      <if test="msgDesc != null">
        msg_desc,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="msgJson != null">
        msg_json,
      </if>
      <if test="fromUsername != null">
        from_username,
      </if>
      <if test="toUsername != null">
        to_username,
      </if>
      <if test="fromRemarkname != null">
        from_remarkname,
      </if>
      <if test="toRemarkname != null">
        to_remarkname,
      </if>
      <if test="fromNickname != null">
        from_nickname,
      </if>
      <if test="toNickname != null">
        to_nickname,
      </if>
      <if test="fromMemberOfGroupNickname != null">
        from_member_of_group_nickname,
      </if>
      <if test="fromMemberOfGroupDisplayname != null">
        from_member_of_group_displayname,
      </if>
      <if test="fromMemberOfGroupUsername != null">
        from_member_of_group_username,
      </if>
      <if test="isSend != null">
        is_send,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="msgId != null">
        #{msgId,jdbcType=VARCHAR},
      </if>
      <if test="msgType != null">
        #{msgType,jdbcType=INTEGER},
      </if>
      <if test="appMsgType != null">
        #{appMsgType,jdbcType=INTEGER},
      </if>
      <if test="msgDesc != null">
        #{msgDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="msgJson != null">
        #{msgJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="fromUsername != null">
        #{fromUsername,jdbcType=VARCHAR},
      </if>
      <if test="toUsername != null">
        #{toUsername,jdbcType=VARCHAR},
      </if>
      <if test="fromRemarkname != null">
        #{fromRemarkname,jdbcType=VARCHAR},
      </if>
      <if test="toRemarkname != null">
        #{toRemarkname,jdbcType=VARCHAR},
      </if>
      <if test="fromNickname != null">
        #{fromNickname,jdbcType=VARCHAR},
      </if>
      <if test="toNickname != null">
        #{toNickname,jdbcType=VARCHAR},
      </if>
      <if test="fromMemberOfGroupNickname != null">
        #{fromMemberOfGroupNickname,jdbcType=VARCHAR},
      </if>
      <if test="fromMemberOfGroupDisplayname != null">
        #{fromMemberOfGroupDisplayname,jdbcType=VARCHAR},
      </if>
      <if test="fromMemberOfGroupUsername != null">
        #{fromMemberOfGroupUsername,jdbcType=VARCHAR},
      </if>
      <if test="isSend != null">
        #{isSend,jdbcType=BOOLEAN},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=CHAR},
      </if>
      <if test="msgId != null">
        msg_id = #{msgId,jdbcType=VARCHAR},
      </if>
      <if test="msgType != null">
        msg_type = #{msgType,jdbcType=INTEGER},
      </if>
      <if test="appMsgType != null">
        app_msg_type = #{appMsgType,jdbcType=INTEGER},
      </if>
      <if test="msgDesc != null">
        msg_desc = #{msgDesc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="msgJson != null">
        msg_json = #{msgJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="fromUsername != null">
        from_username = #{fromUsername,jdbcType=VARCHAR},
      </if>
      <if test="toUsername != null">
        to_username = #{toUsername,jdbcType=VARCHAR},
      </if>
      <if test="fromRemarkname != null">
        from_remarkname = #{fromRemarkname,jdbcType=VARCHAR},
      </if>
      <if test="toRemarkname != null">
        to_remarkname = #{toRemarkname,jdbcType=VARCHAR},
      </if>
      <if test="fromNickname != null">
        from_nickname = #{fromNickname,jdbcType=VARCHAR},
      </if>
      <if test="toNickname != null">
        to_nickname = #{toNickname,jdbcType=VARCHAR},
      </if>
      <if test="fromMemberOfGroupNickname != null">
        from_member_of_group_nickname = #{fromMemberOfGroupNickname,jdbcType=VARCHAR},
      </if>
      <if test="fromMemberOfGroupDisplayname != null">
        from_member_of_group_displayname = #{fromMemberOfGroupDisplayname,jdbcType=VARCHAR},
      </if>
      <if test="fromMemberOfGroupUsername != null">
        from_member_of_group_username = #{fromMemberOfGroupUsername,jdbcType=VARCHAR},
      </if>
      <if test="isSend != null">
        is_send = #{isSend,jdbcType=BOOLEAN},
      </if>
    </trim>
  </insert>
</mapper>